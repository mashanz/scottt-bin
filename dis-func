#!/usr/bin/gdb --python
# vim: set filetype=python:

# disassemble a funtion from an executable with GDB

import sys
import optparse

import gdb

def print_usage_exit():
    sys.stderr.write('usage: dis-func EXECUTABLE FUNCTION [FUNCTION ...]\n')
    sys.exit(2)

def main(args):
    p = optparse.OptionParser(option_list=[
        optparse.Option('--no-header', action='store_true',
                        dest='no_header',
                        help="don't show \"Dump of assembler...\" header and footers"),
        optparse.Option('-s', '--source', action='store_true',
                        dest='source',
                        help='include source lines'),
    ])

    (options, args) = p.parse_args(args)
    try:
        (exe, functions) = (args[0], args[1:])
        if (not exe) or (not functions):
            print_usage_exit()
    except IndexError:
        print_usage_exit()

    if len(functions) == 1:
        # behave like grep doesn't show file names with only one file
        options.no_header = True

    gdb.execute('file %s' % (exe,))
    for i in functions:
        dis_options = '/r'
        if options.source:
            dis_options += 'm'
        try:
            o = gdb.execute('disassemble %s %s' % (dis_options, i), to_string=True)
        except gdb.error, e:
            # let's hope these string messages are stable ..
            if not e.message.startswith('No symbol table is loaded'):
                raise
            sys.stderr.write("dis-func: %s: can't find symbol table\n" % (exe,))
            if exe.startswith('/usr/bin') or exe.startswith('/bin'):
                sys.stderr.write('\ttry debuginfo-install\n')
            sys.exit(3)

        if options.no_header:
            i = o.find('\n')
            j = o.rfind('\n')
            j = o.rfind('\n', 0, j)
            o = o[i+1:j+1]
        sys.stdout.write(o)

if __name__ == '__main__':
    main(sys.argv)
