#!/usr/bin/env python

# Create chroots from Fedora repositories with yum
# Usage: yum-febootstrap [OPTIONS] INSTALL_ROOT [EXTRA_PACKAGES]
# e.g.
# $ sudo ./yum-febootstrap -r 18 -a i386 OUT_DIR
#
# requires root privileges

import sys
import os
import re
import subprocess
import optparse
import tempfile
import logging

yum_config_template = '''[main]
reposdir=''
[fedora]
name=Fedora $releasever - {basearch}
failovermethod=priority
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-$releasever&arch={basearch}
enabled=1
metadata_expire=7d
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-{basearch}
[updates]
name=Fedora $releasever - {basearch} - Updates
failovermethod=priority
#baseurl=http://download.fedoraproject.org/pub/fedora/linux/updates/$releasever/{basearch}/
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f$releasever&arch={basearch}
enabled=1
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-{basearch}

'''

def main(args):
    op = optparse.OptionParser(usage='usage: %prog [OPTIONS] INSTALL_ROOT [EXTRA_PACKAGES]',
                               option_list=[
        optparse.Option('-r', '--releasever', default=None, help='Fedora release to install, e.g. 18'),
        optparse.Option('--distroverpkg', default='fedora-release',
                        help='Used to determine the default releasever when'),
        optparse.Option('-a', '--arch', default=None, help='x86_64, i386, armhfp etc'),
        optparse.Option('-d', '--debug', action='store_true', help='enable debug logging'),
    ])

    (options, args) = op.parse_args(args)
    if options.debug:
        logging.getLogger().setLevel(logging.DEBUG)

    if len(args) < 1:
        op.print_usage()
        sys.exit(2)

    try:
        (install_root, extra_packages) = (args[0], args[1:])
    except IndexError:
        op.print_usage()
        sys.exit(2)

    if options.releasever is None:
        tf0 = tempfile.TemporaryFile(mode='w+')
        subprocess.check_call(['rpmquery', '--queryformat', '%{version}', options.distroverpkg],
                              stdout=tf0)
        tf0.seek(0)
        options.releasever = tf0.read()
    logging.debug('releasever: %s' % (options.releasever))

    if options.arch is None:
        options.arch = os.uname()[4]
        if re.match(r'i.86', options.arch):
            options.arch = i386
        # map arm to 'armhfp' or 'arm'

    logging.debug('arch: %s' % (options.arch))

    #CRITICAL:yum.cli:--installroot must be an absolute path: t
    install_root = os.path.realpath(install_root)

    tf = tempfile.NamedTemporaryFile(mode='w+')
    tf.write(yum_config_template.format(basearch=options.arch))
    tf.seek(0)
    cmd = ['yum',
           '--config', tf.name,
           '--releasever', options.releasever,
           'install', '--assumeyes', '--skip-broken', '--nogpgcheck', '--installroot', install_root,
           '@core',
          ] + extra_packages
    logging.debug(cmd)
    subprocess.check_call(cmd)

if __name__ == '__main__':
    main(sys.argv[1:])
